{"ast":null,"code":"import _defineProperty from \"C:\\\\PersonalProject\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\PersonalProject\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\PersonalProject\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\PersonalProject\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\PersonalProject\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\PersonalProject\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\PersonalProject\\\\src\\\\components\\\\Register.js\";\nimport React from 'react';\nimport UserService from '../services/UserService';\nimport RegistrationForm from './RegistrationForm';\nimport FormErrors from './common/FormErrors';\nimport { Redirect } from 'react-router-dom'; // creating  smart component\n// has a life cycle\n// SETTING THE DEFAULT STATE OF THE PAGE\n\nvar Register =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Register, _React$Component);\n\n  function Register(props) {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Register).call(this, props));\n\n    _this.handleClick = function (evt) {\n      // console.log('register.handleClick Event')\n      var data = {\n        firstName: _this.state.firstName,\n        lastName: _this.state.lastName,\n        email: _this.state.email,\n        password: _this.state.password,\n        passwordConfirm: _this.state.confirmPassword\n      };\n      UserService.register(data, _this.onRegisterSuccess, _this.onRegisterError);\n    };\n\n    _this.onRegisterSuccess = function (resp) {\n      console.log(resp); // this.setState({registerSuccessful: true})\n\n      _this.props.history.push(\"/login\");\n    };\n\n    _this.onRegisterError = function (err) {\n      console.log(err);\n    };\n\n    _this.onChange = function (e) {\n      var name = e.target.name;\n      var value = e.target.value;\n\n      _this.setState(_defineProperty({}, name, value), function () {\n        _this.validateField(name, value);\n      });\n\n      console.log(_this.state);\n    };\n\n    _this.validateField = function (fieldName, value) {\n      var fieldValidationErrors = _this.state.formErrors;\n      var firstNameValid = _this.state.firstNameValid;\n      var lastNameValid = _this.state.lastNameValid;\n      var emailValid = _this.state.emailValid;\n      var passwordValid = _this.state.passwordValid;\n      var confirmPasswordValid = _this.state.confirmPasswordValid;\n\n      switch (fieldName) {\n        case 'firstName':\n          firstNameValid = value.length > 2;\n          fieldValidationErrors.firstName = firstNameValid ? '' : 'First Name must be longer than 2 characters';\n          break;\n\n        case 'lastName':\n          lastNameValid = value.length > 2;\n          fieldValidationErrors.lastName = lastNameValid ? '' : 'Last name must be longer than 2 characters';\n          break;\n\n        case 'email':\n          emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n          fieldValidationErrors.email = emailValid ? '' : 'email is invalid';\n          break;\n\n        case 'password':\n          passwordValid = value.match(/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!$%^&*-]).{8,}/); //value.length >= 8;\n\n          fieldValidationErrors.password = passwordValid ? '' : 'must contain one uppercase letter, one special character and at least 8 characters long';\n          break;\n\n        case 'confirmPassword':\n          confirmPasswordValid = value === _this.state.password; //value.match(this.state.password);\n\n          fieldValidationErrors.confirmPassword = confirmPasswordValid ? '' : 'must be the same';\n          break;\n\n        default:\n          break;\n      }\n\n      _this.setState({\n        formErrors: fieldValidationErrors,\n        firstNameValid: firstNameValid,\n        lastNameValid: lastNameValid,\n        emailValid: emailValid,\n        passwordValid: passwordValid,\n        confirmPasswordValid: confirmPasswordValid\n      }, function () {\n        return _this.validateForm();\n      });\n    };\n\n    _this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      formErrors: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n      },\n      firstNameValid: false,\n      lastNameValid: false,\n      emailValid: false,\n      passwordValid: false,\n      confirmPasswordValid: false,\n      isFormValid: false,\n      registerSuccessful: false\n    };\n    return _this;\n  } // FUNCTIONS\n\n\n  _createClass(Register, [{\n    key: \"validateForm\",\n    value: function validateForm() {\n      this.setState({\n        isFormValid: this.state.firstNameValid && this.state.lastNameValid && this.state.emailValid && this.state.passwordValid && this.state.confirmPasswordValid\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // if (this.state.registerSuccessful) {\n      //     return(\n      //     <Redirect to=\"/login\" />\n      //     )\n      // }\n      // console.log(\"this is the render method\")\n      // console.table(this.state)\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(RegistrationForm, {\n        firstName: this.state.firstName,\n        lastName: this.state.lastName,\n        email: this.state.email,\n        password: this.state.password,\n        passwordConfirm: this.state.passwordConfirm,\n        onChange: this.onChange,\n        onClick: this.handleClick,\n        disabled: this.state.isFormValid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }), React.createElement(FormErrors, {\n        formErrors: this.state.formErrors,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Register;\n}(React.Component);\n\nexport default Register;","map":{"version":3,"sources":["C:\\PersonalProject\\src\\components\\Register.js"],"names":["React","UserService","RegistrationForm","FormErrors","Redirect","Register","props","handleClick","evt","data","firstName","state","lastName","email","password","passwordConfirm","confirmPassword","register","onRegisterSuccess","onRegisterError","resp","console","log","history","push","err","onChange","e","name","target","value","setState","validateField","fieldName","fieldValidationErrors","formErrors","firstNameValid","lastNameValid","emailValid","passwordValid","confirmPasswordValid","length","match","validateForm","isFormValid","registerSuccessful","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport UserService from '../services/UserService'\r\nimport RegistrationForm from './RegistrationForm'\r\nimport FormErrors from './common/FormErrors'\r\nimport  { Redirect } from 'react-router-dom'\r\n\r\n// creating  smart component\r\n// has a life cycle\r\n\r\n// SETTING THE DEFAULT STATE OF THE PAGE\r\nclass Register extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            confirmPassword: \"\",\r\n            formErrors: {\r\n                firstName: '',\r\n                lastName: '',\r\n                email: '',\r\n                password: '',\r\n                confirmPassword: ''\r\n            },\r\n            firstNameValid: false,\r\n            lastNameValid: false,\r\n            emailValid: false,\r\n            passwordValid: false,\r\n            confirmPasswordValid: false,\r\n            isFormValid: false,\r\n            registerSuccessful: false\r\n        }\r\n    }\r\n\r\n    // FUNCTIONS\r\n    handleClick = evt => {\r\n        // console.log('register.handleClick Event')\r\n        const data = {\r\n            firstName: this.state.firstName,\r\n            lastName: this.state.lastName,\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            passwordConfirm: this.state.confirmPassword\r\n        }\r\n        UserService.register(data, this.onRegisterSuccess, this.onRegisterError)\r\n    }\r\n    onRegisterSuccess = resp => {\r\n        console.log(resp)\r\n        // this.setState({registerSuccessful: true})\r\n        this.props.history.push(\"/login\")\r\n    }\r\n    onRegisterError = err => {\r\n        console.log(err)\r\n    }\r\n\r\n    // handleChange = evt => {\r\n    //     const key = evt.target.name;\r\n    //     const val = evt.target.value;\r\n    //     this.setState({\r\n    //         [key]: val\r\n    //     }, this.validateField(key, val))\r\n    // }\r\n\r\n    // validateField = (key, val) => {\r\n    //     console.log(key)\r\n    //     console.log(val)\r\n    //     if (val.length < 2)\r\n    //         this.setState({ errMsg: `${key} requires at least 2 characters` }, this.validateForm)\r\n    //     else\r\n    //         this.setState({ errMsg: \"\" }, this.validateForm)\r\n    // }\r\n\r\n    // validateForm = () => {\r\n    //     if (this.state.firstName.length > 2 && this.state.lastName.length > 2)\r\n    //         this.setState({ isFormValid: true })\r\n    //     else\r\n    //         this.setState({ isFormValid: false })\r\n    // }\r\n\r\n    onChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n        console.log(this.state);\r\n    }\r\n\r\n    validateField = (fieldName, value) => {\r\n        let fieldValidationErrors = this.state.formErrors;\r\n        let firstNameValid = this.state.firstNameValid;\r\n        let lastNameValid = this.state.lastNameValid;\r\n        let emailValid = this.state.emailValid;\r\n        let passwordValid = this.state.passwordValid;\r\n        let confirmPasswordValid = this.state.confirmPasswordValid;\r\n\r\n        switch (fieldName) {\r\n            case 'firstName':\r\n                firstNameValid = value.length > 2;\r\n                fieldValidationErrors.firstName = firstNameValid ? '' : 'First Name must be longer than 2 characters';\r\n                break;\r\n            case 'lastName':\r\n                lastNameValid = value.length > 2;\r\n                fieldValidationErrors.lastName = lastNameValid ? '' : 'Last name must be longer than 2 characters';\r\n                break;\r\n            case 'email':\r\n                emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\r\n                fieldValidationErrors.email = emailValid ? '' : 'email is invalid';\r\n                break;\r\n            case 'password':\r\n                passwordValid = value.match(/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!$%^&*-]).{8,}/)   //value.length >= 8;\r\n                fieldValidationErrors.password = passwordValid ? '' : 'must contain one uppercase letter, one special character and at least 8 characters long';\r\n                break;\r\n            case 'confirmPassword':\r\n                confirmPasswordValid = (value === this.state.password)//value.match(this.state.password);\r\n                fieldValidationErrors.confirmPassword = confirmPasswordValid ? '' : 'must be the same';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.setState({\r\n            formErrors: fieldValidationErrors,\r\n            firstNameValid: firstNameValid,\r\n            lastNameValid: lastNameValid,\r\n            emailValid: emailValid,\r\n            passwordValid: passwordValid,\r\n            confirmPasswordValid: confirmPasswordValid\r\n        }, () => this.validateForm());\r\n    }\r\n\r\n    validateForm() {\r\n        this.setState({\r\n            isFormValid:\r\n                this.state.firstNameValid\r\n                && this.state.lastNameValid\r\n                && this.state.emailValid\r\n                && this.state.passwordValid\r\n                && this.state.confirmPasswordValid\r\n        });\r\n    }\r\n\r\n    render() {\r\n        // if (this.state.registerSuccessful) {\r\n        //     return(\r\n        //     <Redirect to=\"/login\" />\r\n        //     )\r\n        // }\r\n        // console.log(\"this is the render method\")\r\n        // console.table(this.state)\r\n        return (\r\n            <React.Fragment>\r\n                <RegistrationForm\r\n                    firstName={this.state.firstName}\r\n                    lastName={this.state.lastName}\r\n                    email={this.state.email}\r\n                    password={this.state.password}\r\n                    passwordConfirm={this.state.passwordConfirm}\r\n                    onChange={this.onChange}\r\n                    onClick={this.handleClick}\r\n                    disabled={this.state.isFormValid}\r\n                />\r\n                <FormErrors formErrors={this.state.formErrors} />\r\n                \r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Register\r\n"]},"metadata":{},"sourceType":"module"}